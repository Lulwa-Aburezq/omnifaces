<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2012 OmniFaces.

   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
   the License. You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
   specific language governing permissions and limitations under the License.
 -->
<facelet-taglib 
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
	version="2.0"
>
	<namespace>http://omnifaces.org/ui</namespace>

	<tag>
		<description>
			<![CDATA[
				<strong><code>Tree</code></strong> is an <code>UIComponent</code> that supports data binding to a tree
				of data objects represented by a <code>TreeModel</code> instance, which is the current value of this
				component itself (typically established via a <code>ValueExpression</code>. During iterative processing
				over the nodes of tree in the tree model, the object for the current node is exposed as a request
				attribute under the key specified by the <code>var</code> attribute. The node itself is exposed as a
				request attribute under the key specified by the <code>varNode</code> attribute.
				<p>
				Only children of type <code>TreeNode</code> are allowed and processed by this component.
				<p>
				This component does not have a renderer since it does not render any markup by itself. This allows the
				developers to have full control over the markup of the tree by declaring the appropriate JSF components
				or HTML elements in the markup. Here is a basic usage example:
				<pre>
				&lt;o:tree value="#{bean.treeModel}" var="item" varNode="node"&gt;
				  &lt;o:treeNode&gt;
				    &lt;ul&gt;
				      &lt;o:treeNodeItem&gt;
				        &lt;li&gt;
				          #{node.index} #{item.someProperty}
				          &lt;o:treeInsertChildren /&gt;
				        &lt;/li&gt;
				      &lt;/o:treeNodeItem&gt;
				    &lt;/ul&gt;
				  &lt;/o:treeNode&gt;
				&lt;/o:tree&gt;
				</pre>				
			]]>
		</description>
		<tag-name>tree</tag-name>
		<component>
			<component-type>org.omnifaces.component.tree.Tree</component-type>
		</component>
		<attribute>
			<description>
				<![CDATA[
					The component identifier for this component. This value must be unique within the closest parent 
					component that is a naming container.
				]]>
			</description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					Flag indicating whether or not this component should be rendered (during Render Response Phase), or 
					processed on any subsequent form submit. The default value for this property is true.
				]]>
			</description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The <code>ValueExpression</code> linking this component to a property in a backing bean.
				]]>
			</description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The current value of this component. As far only <code>TreeModel</code> is allowed as value.
				]]>
			</description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The name of the request attribute which exposes the wrapped data of the current node of the tree 
					model.
				]]>
			</description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The name of the request attribute which exposes the current node of the tree model.
				]]>
			</description>
			<name>varNode</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>

	<tag>
		<description>
			<![CDATA[
				<strong><code>TreeNode</code></strong> is an <code>UIComponent</code> that represents a single tree node
				within a parent <code>Tree</code> component. Within this component, the <code>var</code> attribute of
				the parent <code>Tree</code> component will expose the tree node. Each of its children is processed by
				<code>TreeNodeItem</code>.
				<p>
				The <code>level</code> attribute can be used to specify for which tree node level as obtained by
				<code>TreeModel#getLevel()</code> this component should render the children by
				<code>TreeNodeItem</code>. The root tree node has level 0.
			]]>
		</description>
		<tag-name>treeNode</tag-name>
		<component>
			<component-type>org.omnifaces.component.tree.TreeNode</component-type>
		</component>
		<attribute>
			<description>
				<![CDATA[
					The component identifier for this component. This value must be unique within the closest parent 
					component that is a naming container.
				]]>
			</description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					Flag indicating whether or not this component should be rendered (during Render Response Phase), or 
					processed on any subsequent form submit. The default value for this property is true.
				]]>
			</description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The <code>ValueExpression</code> linking this component to a property in a backing bean.
				]]>
			</description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The tree node level to render the node children for. The root level is <code>0</code>.
				]]>
			</description>
			<name>level</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
	</tag>

	<tag>
		<description>
			<![CDATA[
				<strong><code>TreeNodeItem</strong> is an <code>UIComponent</code> that represents a single child tree
				node within a parent <code>TreeNode</code> component. Within this component, the <code>var</code>
				attribute of the parent <code>Tree</code> component will expose the child tree node.
				<p>
				This component allows a child component of type <code>TreeInsertChildren</code> which indicates the
				place to insert the children of the current child tree node recursively by a <code>TreeNode</code>
				component associated with the children's level in the same parent <code>Tree</code> component.
			]]>
		</description>
		<tag-name>treeNodeItem</tag-name>
		<component>
			<component-type>org.omnifaces.component.tree.TreeNodeItem</component-type>
		</component>
		<attribute>
			<description>
				<![CDATA[
					The component identifier for this component. This value must be unique within the closest parent 
					component that is a naming container.
				]]>
			</description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					Flag indicating whether or not this component should be rendered (during Render Response Phase), or 
					processed on any subsequent form submit. The default value for this property is true.
				]]>
			</description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The <code>ValueExpression</code> linking this component to a property in a backing bean.
				]]>
			</description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
	</tag>

	<tag>
		<description>
			<![CDATA[
				<strong><code>TreeInsertChildren</code></strong> is an <code>UIComponent</code> that represents the
				insertion point for the children of a parent tree node which is represented by
				<code>TreeNodeItem</code>.
				<p>
				This component does not allow any children.
			]]>
		</description>
		<tag-name>treeInsertChildren</tag-name>
		<component>
			<component-type>org.omnifaces.component.tree.TreeInsertChildren</component-type>
		</component>
		<attribute>
			<description>
				<![CDATA[
					The component identifier for this component. This value must be unique within the closest parent 
					component that is a naming container.
				]]>
			</description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					Flag indicating whether or not this component should be rendered (during Render Response Phase), or 
					processed on any subsequent form submit. The default value for this property is true.
				]]>
			</description>
			<name>rendered</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>
				<![CDATA[
					The <code>ValueExpression</code> linking this component to a property in a backing bean.
				]]>
			</description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
	</tag>

	<tag>
		<description>
			This component includes the output from a resource located at the given path. This path can
			not extend outside of the current Servlet context. A resource is either a Servlet or a JSP
			page.    	
		</description>
		<tag-name>resourceInclude</tag-name>
		<component>
			<component-type>org.omnifaces.component.resourceinclude.ResourceInclude</component-type>
		</component>
		 <attribute>
			<description>A String specifying the pathname to the resource</description>
			<name>path</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
</facelet-taglib>