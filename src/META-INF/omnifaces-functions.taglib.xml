<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2012 OmniFaces.

   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
   the License. You may obtain a copy of the License at

	   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
   specific language governing permissions and limitations under the License.
 -->
<facelet-taglib
	id="of"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
	version="2.0"
>
	<description>OmniFaces EL functions.</description>
	<namespace>http://omnifaces.org/functions</namespace>

	<!-- Strings ================================================================================================== -->

	<function>
		<description>
			<![CDATA[
				Abbreviate the given text on the given size limit with ellipsis.
			]]>
		</description>
		<function-name>abbreviate</function-name>
		<function-class>org.omnifaces.el.functions.Strings</function-class>
		<function-signature>java.lang.String abbreviate(java.lang.String, int)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Concatenate the string representation of the given objects. This is useful when you don't know
				beforehand if one of the both hands is a string or is <code>null</code>, otherwise the new EL 2.2
				<code>#{bean.string1.concat(bean.string2)}</code> can just be used.
			]]>
		</description>
		<function-name>concat</function-name>
		<function-class>org.omnifaces.el.functions.Strings</function-class>
		<function-signature>java.lang.String concat(java.lang.Object, java.lang.Object)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				URL-prettify the given string. It performs the following tasks:
				<ul>
				<li>Lowercase the string.
				<li>Remove combining diacritical marks.
				<li>Replace non-alphanumeric characters by hyphens.
				</ul>
				This is useful when populating links with dynamic paths obtained from user controlled variables, such
				as blog titles.
			]]>
		</description>
		<function-name>prettyURL</function-name>
		<function-class>org.omnifaces.el.functions.Strings</function-class>
		<function-signature>java.lang.String prettyURL(java.lang.String)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				URL-encode the given string using UTF-8. This is useful for cases where you can't use
				<code>&lt;f:param&gt;</code>.
			]]>
		</description>
		<function-name>encodeURL</function-name>
		<function-class>org.omnifaces.el.functions.Strings</function-class>
		<function-signature>java.lang.String encodeURL(java.lang.String)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Escapes the given string according the JavaScript code rules. This escapes among others the special
				characters, the whitespace, the quotes and the unicode characters. Useful whenever you want to use a
				Java string variable as a JavaScript string variable.
			]]>
		</description>
		<function-name>escapeJS</function-name>
		<function-class>org.omnifaces.el.functions.Strings</function-class>
		<function-signature>java.lang.String escapeJS(java.lang.String)</function-signature>
	</function>

	<!-- Arrays =================================================================================================== -->

	<function>
		<description>
			<![CDATA[
				Creates and returns a dummy object array of the given size. This is useful if you want to iterate
				<i>n</i> times over an <code>&lt;ui:repeat&gt;</code>, which doesn't support EL in <code>begin</code>
				and <code>end</code> attributes.
			]]>
		</description>
		<function-name>createArray</function-name>
		<function-class>org.omnifaces.el.functions.Arrays</function-class>
		<function-signature>java.lang.Object[] createArray(int)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Returns <code>true</code> if the string representation of an item of the given array equals to the
				string representation of the given item. This returns <code>false</code> if either the array or the
				item is null. This is useful if you want to for example check if <code>#{paramValues.foo}</code>
				contains a certain value.
			]]>
		</description>
		<function-name>contains</function-name>
		<function-class>org.omnifaces.el.functions.Arrays</function-class>
		<function-signature>boolean contains(java.lang.Object[], java.lang.Object)</function-signature>
	</function>

	<!-- Converters =============================================================================================== -->

	<function>
		<description>
			<![CDATA[
				Format the given date in the given pattern. This is useful when you want to format dates in for example
				the <code>title</code> attribute of an UI component, or the <code>itemLabel</code> attribute of select
				item, or wherever you can't use the <code>&lt;f:convertDateTime&gt;</code> tag.
			]]>
		</description>
		<function-name>formatDate</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.lang.String formatDate(java.util.Date, java.lang.String)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Converts a <code>Set&lt;E&gt;</code> to a <code>List&lt;E&gt;</code>. Useful when you want to iterate
				over a <code>Set</code> in for example <code>&lt;ui:repeat&gt;</code>.
			]]>
		</description>
		<function-name>setToList</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.util.List setToList(java.util.Set)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Converts a <code>Map&lt;K, V&gt;</code> to a <code>List&lt;Map.Entry&ltK, V&gt;&gt;</code>. Useful when
				you want to iterate over a <code>Map</code> in for example <code>&lt;ui:repeat&gt;</code>. Each of the
				entries has the usual <code>getKey()</code> and <code>getValue()</code> methods.
			]]>
		</description>
		<function-name>mapToList</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.util.List mapToList(java.util.Map)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Converts seconds to days. This rounds down.
			]]>
		</description>
		<function-name>secondsToDays</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.lang.Long secondsToDays(java.lang.Long)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Converts days to seconds.
			]]>
		</description>
		<function-name>daysToSeconds</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.lang.Long daysToSeconds(java.lang.Long)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Converts bytes to kilobytes. This rounds down.
			]]>
		</description>
		<function-name>bytesToKilobytes</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.lang.Long bytesToKilobytes(java.lang.Long)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Converts bytes to megabytes. This rounds down.
			]]>
		</description>
		<function-name>bytesToMegabytes</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.lang.Long bytesToMegabytes(java.lang.Long)</function-signature>
	</function>

	<function>
		<description>
			<![CDATA[
				Print the stack trace of the given exception.
			]]>
		</description>
		<function-name>printStackTrace</function-name>
		<function-class>org.omnifaces.el.functions.Converters</function-class>
		<function-signature>java.lang.String printStackTrace(java.lang.Throwable)</function-signature>
	</function>

</facelet-taglib>